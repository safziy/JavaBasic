package com.safziy.jvm.classinfo.bytecode;

/**
 * 虚拟机字节码
 * 
 * @author safziy
 *
 */
public enum ByteCode {
	opc_nop((short) 0x00, "什么都不做"),
	opc_aconst_null((short) 0x01, "将null推送至栈顶"),
	opc_iconst_m1((short) 0x02, "将int型-1推送至栈顶"),
	opc_iconst_0((short) 0x03, "将int型0推送至栈顶"),
	opc_iconst_1((short) 0x04, "将int型1推送至栈顶"),
	opc_iconst_2((short) 0x05, "将int型2推送至栈顶"),
	opc_iconst_3((short) 0x06, "将int型3推送至栈顶"),
	opc_iconst_4((short) 0x07, "将int型4推送至栈顶"),
	opc_iconst_5((short) 0x08, "将int型5推送至栈顶"),
	opc_lconst_0((short) 0x09, "将long型0推送至栈顶"),
	opc_lconst_1((short) 0x0a, "将long型1推送至栈顶"),
	opc_fconst_0((short) 0x0b, "将float型0推送至栈顶"),
	opc_fconst_1((short) 0x0c, "将float型1推送至栈顶"),
	opc_fconst_2((short) 0x0d, "将float型2推送至栈顶"),
	opc_dconst_0((short) 0x0e, "将double型0推送至栈顶"),
	opc_dconst_1((short) 0x0f, "将double型1推送至栈顶"),
	opc_bipush((short) 0x10, "将单字节的常量值(-128~127)推送至栈顶"),
	opc_sipush((short) 0x11, "将一个短整型常量值(-32768~32767)推送至栈顶"),
	opc_ldc((short) 0x12, "将int,float或String型常量值从常量池中推送至栈顶"),
	opc_ldc_w((short) 0x13, "将int,float或String型常量值从常量池中推送至栈顶（宽索引）"),
	opc_ldc2_w((short) 0x14, "将long或double型常量值从常量池中推送至栈顶（宽索引）"),
	opc_iload((short) 0x15, "将指定的int型本地变量推送至栈顶"),
	opc_lload((short) 0x16, "将指定的long型本地变量推送至栈顶"),
	opc_fload((short) 0x17, "将指定的float型本地变量推送至栈顶"),
	opc_dload((short) 0x18, "将指定的double型本地变量推送至栈顶"),
	opc_aload((short) 0x19, "将指定的引用类型本地变量推送至栈顶"),
	opc_iload_0((short) 0x1a, "将第一个int型本地变量推送至栈顶"),
	opc_iload_1((short) 0x1b, "将第二个int型本地变量推送至栈顶"),
	opc_iload_2((short) 0x1c, "将第三个int型本地变量推送至栈顶"),
	opc_iload_3((short) 0x1d, "将第四个int型本地变量推送至栈顶"),
	opc_lload_0((short) 0x1e, "将第一个long型本地变量推送至栈顶"),
	opc_lload_1((short) 0x1f, "将第二个long型本地变量推送至栈顶"),
	opc_lload_2((short) 0x20, "将第三个long型本地变量推送至栈顶"),
	opc_lload_3((short) 0x21, "将第四个long型本地变量推送至栈顶"),
	opc_fload_0((short) 0x22, "将第一个float型本地变量推送至栈顶"),
	opc_fload_1((short) 0x23, "将第二个float型本地变量推送至栈顶"),
	opc_fload_2((short) 0x24, "将第三个float型本地变量推送至栈顶"),
	opc_fload_3((short) 0x25, "将第四个float型本地变量推送至栈顶"),
	opc_dload_0((short) 0x26, "将第一个double型本地变量推送至栈顶"),
	opc_dload_1((short) 0x27, "将第二个double型本地变量推送至栈顶"),
	opc_dload_2((short) 0x28, "将第三个double型本地变量推送至栈顶"),
	opc_dload_3((short) 0x29, "将第四个double型本地变量推送至栈顶"),
	opc_aload_0((short) 0x2a, "将第一个引用类型本地变量推送至栈顶"),
	opc_aload_1((short) 0x2b, "将第二个引用类型本地变量推送至栈顶"),
	opc_aload_2((short) 0x2c, "将第三个引用类型本地变量推送至栈顶"),
	opc_aload_3((short) 0x2d, "将第四个引用类型本地变量推送至栈顶"),
	opc_iaload((short) 0x2e, "将int型数组指定索引的值推送至栈顶"),
	opc_laload((short) 0x2f, "将long型数组指定索引的值推送至栈顶"),
	opc_faload((short) 0x30, "将float型数组指定索引的值推送至栈顶"),
	opc_daload((short) 0x31, "将double型数组指定索引的值推送至栈顶"),
	opc_aaload((short) 0x32, "将引用型数组指定索引的值推送至栈顶"),
	opc_baload((short) 0x33, "将boolean或byte型数组指定索引的值推送至栈顶"),
	opc_caload((short) 0x34, "将char型数组指定索引的值推送至栈顶"),
	opc_saload((short) 0x35, "将short型数组指定索引的值推送至栈顶"),
	opc_istore((short) 0x36, "将栈顶int型数值存入指定本地变量"),
	opc_lstore((short) 0x37, "将栈顶long型数值存入指定本地变量"),
	opc_fstore((short) 0x38, "将栈顶float型数值存入指定本地变量"),
	opc_dstore((short) 0x39, "将栈顶double型数值存入指定本地变量"),
	opc_astore((short) 0x3a, "将栈顶引用型数值存入指定本地变量"),
	opc_istore_0((short) 0x3b, "将栈顶int型数值存入第一个本地变量"),
	opc_istore_1((short) 0x3c, "将栈顶int型数值存入第二个本地变量"),
	opc_istore_2((short) 0x3d, "将栈顶int型数值存入第三个本地变量"),
	opc_istore_3((short) 0x3e, "将栈顶int型数值存入第四个本地变量"),
	opc_lstore_0((short) 0x3f, "将栈顶long型数值存入第一个本地变量"),
	opc_lstore_1((short) 0x40, "将栈顶long型数值存入第二个本地变量"),
	opc_lstore_2((short) 0x41, "将栈顶long型数值存入第三个本地变量"),
	opc_lstore_3((short) 0x42, "将栈顶long型数值存入第四个本地变量"),
	opc_fstore_0((short) 0x43, "将栈顶float型数值存入第一个本地变量"),
	opc_fstore_1((short) 0x44, "将栈顶float型数值存入第二个本地变量"),
	opc_fstore_2((short) 0x45, "将栈顶float型数值存入第三个本地变量"),
	opc_fstore_3((short) 0x46, "将栈顶float型数值存入第四个本地变量"),
	opc_dstore_0((short) 0x47, "将栈顶double型数值存入第一个本地变量"),
	opc_dstore_1((short) 0x48, "将栈顶double型数值存入第二个本地变量"),
	opc_dstore_2((short) 0x49, "将栈顶double型数值存入第三个本地变量"),
	opc_dstore_3((short) 0x4a, "将栈顶double型数值存入第四个本地变量"),
	opc_astore_0((short) 0x4b, "将栈顶引用型数值存入第一个本地变量"),
	opc_astore_1((short) 0x4c, "将栈顶引用型数值存入第二个本地变量"),
	opc_astore_2((short) 0x4d, "将栈顶引用型数值存入第三个本地变量"),
	opc_astore_3((short) 0x4e, "将栈顶引用型数值存入第四个本地变量"),
	opc_iastore((short) 0x4f, "将栈顶int型数值存入指定数组的指定索引位置"),
	opc_lastore((short) 0x50, "将栈顶long型数值存入指定数组的指定索引位置"),
	opc_fastore((short) 0x51, "将栈顶float型数值存入指定数组的指定索引位置"),
	opc_dastore((short) 0x52, "将栈顶double型数值存入指定数组的指定索引位置"),
	opc_aastore((short) 0x53, "将栈顶引用型数值存入指定数组的指定索引位置"),
	opc_bastore((short) 0x54, "将栈顶boolean或byte型数值存入指定数组的指定索引位置"),
	opc_castore((short) 0x55, "将栈顶char型数值存入指定数组的指定索引位置"),
	opc_sastore((short) 0x56, "将栈顶short型数值存入指定数组的指定索引位置"),
	opc_pop((short) 0x57, "将栈顶数值弹出(数值不能是long或double类型的)"),
	opc_pop2((short) 0x58, "将栈顶的一个（long或double类型的)或两个数值弹出（其它）"),
	opc_dup((short) 0x59, "复制栈顶数值并将复制值压入栈顶"),
	opc_dup_x1((short) 0x5a, "复制栈顶数值并将两个复制值压入栈顶"),
	opc_dup_x2((short) 0x5b, "复制栈顶数值并将三个（或两个）复制值压入栈顶"),
	opc_dup2((short) 0x5c, "复制栈顶一个（long或double类型的)或两个（其它）数值并将复制值压入栈顶"),
	opc_dup2_x1((short) 0x5d, "<待补充>"),
	opc_dup2_x2((short) 0x5e, "<待补充>"),
	opc_swap((short) 0x5f, "将栈最顶端的两个数值互换(数值不能是long或double类型的)"),
	opc_iadd((short) 0x60, "将栈顶两int型数值相加并将结果压入栈顶"),
	opc_ladd((short) 0x61, "将栈顶两long型数值相加并将结果压入栈顶"),
	opc_fadd((short) 0x62, "将栈顶两float型数值相加并将结果压入栈顶"),
	opc_dadd((short) 0x63, "将栈顶两double型数值相加并将结果压入栈顶"),
	opc_isub((short) 0x64, "将栈顶两int型数值相减并将结果压入栈顶"),
	opc_lsub((short) 0x65, "将栈顶两long型数值相减并将结果压入栈顶"),
	opc_fsub((short) 0x66, "将栈顶两float型数值相减并将结果压入栈顶"),
	opc_dsub((short) 0x67, "将栈顶两double型数值相减并将结果压入栈顶"),
	opc_imul((short) 0x68, "将栈顶两int型数值相乘并将结果压入栈顶"),
	opc_lmul((short) 0x69, "将栈顶两long型数值相乘并将结果压入栈顶"),
	opc_fmul((short) 0x6a, "将栈顶两float型数值相乘并将结果压入栈顶"),
	opc_dmul((short) 0x6b, "将栈顶两double型数值相乘并将结果压入栈顶"),
	opc_idiv((short) 0x6c, "将栈顶两int型数值相除并将结果压入栈顶"),
	opc_ldiv((short) 0x6d, "将栈顶两long型数值相除并将结果压入栈顶"),
	opc_fdiv((short) 0x6e, "将栈顶两float型数值相除并将结果压入栈顶"),
	opc_ddiv((short) 0x6f, "将栈顶两double型数值相除并将结果压入栈顶"),
	opc_irem((short) 0x70, "将栈顶两int型数值作取模运算并将结果压入栈顶"),
	opc_lrem((short) 0x71, "将栈顶两long型数值作取模运算并将结果压入栈顶"),
	opc_frem((short) 0x72, "将栈顶两float型数值作取模运算并将结果压入栈顶"),
	opc_drem((short) 0x73, "将栈顶两double型数值作取模运算并将结果压入栈顶"),
	opc_ineg((short) 0x74, "将栈顶int型数值取负并将结果压入栈顶"),
	opc_lneg((short) 0x75, "将栈顶long型数值取负并将结果压入栈顶"),
	opc_fneg((short) 0x76, "将栈顶float型数值取负并将结果压入栈顶"),
	opc_dneg((short) 0x77, "将栈顶double型数值取负并将结果压入栈顶"),
	opc_ishl((short) 0x78, "将int型数值左移位指定位数并将结果压入栈顶"),
	opc_lshl((short) 0x79, "将long型数值左移位指定位数并将结果压入栈顶"),
	opc_ishr((short) 0x7a, "将int型数值右（符号）移位指定位数并将结果压入栈顶"),
	opc_lshr((short) 0x7b, "将long型数值右（符号）移位指定位数并将结果压入栈顶"),
	opc_iushr((short) 0x7c, "将int型数值右（无符号）移位指定位数并将结果压入栈顶"),
	opc_lushr((short) 0x7d, "将long型数值右（无符号）移位指定位数并将结果压入栈顶"),
	opc_iand((short) 0x7e, "将栈顶两int型数值作“按位与”并将结果压入栈顶"),
	opc_land((short) 0x7f, "将栈顶两long型数值作“按位与”并将结果压入栈顶"),
	opc_ior((short) 0x80, "将栈顶两int型数值作“按位或”并将结果压入栈顶"),
	opc_lor((short) 0x81, "将栈顶两long型数值作“按位或”并将结果压入栈顶"),
	opc_ixor((short) 0x82, "将栈顶两int型数值作“按位异或”并将结果压入栈顶"),
	opc_lxor((short) 0x83, "将栈顶两long型数值作“按位异或”并将结果压入栈顶"),
	opc_iinc((short) 0x84, "将指定int型变量增加指定值（i++,i--,i+=2）"),
	opc_i2l((short) 0x85, "将栈顶int型数值强制转换成long型数值并将结果压入栈顶"),
	opc_i2f((short) 0x86, "将栈顶int型数值强制转换成float型数值并将结果压入栈顶"),
	opc_i2d((short) 0x87, "将栈顶int型数值强制转换成double型数值并将结果压入栈顶"),
	opc_l2i((short) 0x88, "将栈顶long型数值强制转换成int型数值并将结果压入栈顶"),
	opc_l2f((short) 0x89, "将栈顶long型数值强制转换成float型数值并将结果压入栈顶"),
	opc_l2d((short) 0x8a, "将栈顶long型数值强制转换成double型数值并将结果压入栈顶"),
	opc_f2i((short) 0x8b, "将栈顶float型数值强制转换成int型数值并将结果压入栈顶"),
	opc_f2l((short) 0x8c, "将栈顶float型数值强制转换成long型数值并将结果压入栈顶"),
	opc_f2d((short) 0x8d, "将栈顶float型数值强制转换成double型数值并将结果压入栈顶"),
	opc_d2i((short) 0x8e, "将栈顶double型数值强制转换成int型数值并将结果压入栈顶"),
	opc_d2l((short) 0x8f, "将栈顶double型数值强制转换成long型数值并将结果压入栈顶"),
	opc_d2f((short) 0x90, "将栈顶double型数值强制转换成float型数值并将结果压入栈顶"),
	opc_i2b((short) 0x91, "将栈顶int型数值强制转换成byte型数值并将结果压入栈顶"),
	opc_i2c((short) 0x92, "将栈顶int型数值强制转换成char型数值并将结果压入栈顶"),
	opc_i2s((short) 0x93, "将栈顶int型数值强制转换成short型数值并将结果压入栈顶"),
	opc_lcmp((short) 0x94, "比较栈顶两long型数值大小，并将结果（1，0，-1）压入栈顶"),
	opc_fcmpl((short) 0x95, "比较栈顶两float型数值大小，并将结果（1，0，-1）压入栈顶；当其中一个数值为NaN时，将-1压入栈顶"),
	opc_fcmpg((short) 0x96, "比较栈顶两float型数值大小，并将结果（1，0，-1）压入栈顶；当其中一个数值为NaN时，将1压入栈顶"),
	opc_dcmpl((short) 0x97, "比较栈顶两double型数值大小，并将结果（1，0，-1）压入栈顶；当其中一个数值为NaN时，将-1压入栈顶"),
	opc_dcmpg((short) 0x98, "比较栈顶两double型数值大小，并将结果（1，0，-1）压入栈顶；当其中一个数值为NaN时，将1压入栈顶"),
	opc_ifeq((short) 0x99, "当栈顶int型数值等于0时跳转"),
	opc_ifne((short) 0x9a, "当栈顶int型数值不等于0时跳转"),
	opc_iflt((short) 0x9b, "当栈顶int型数值小于0时跳转"),
	opc_ifge((short) 0x9c, "当栈顶int型数值大于等于0时跳转"),
	opc_ifgt((short) 0x9d, "当栈顶int型数值大于0时跳转"),
	opc_ifle((short) 0x9e, "当栈顶int型数值小于等于0时跳转"),
	opc_if_icmpeq((short) 0x9f, "比较栈顶两int型数值大小，当结果等于0时跳转"),
	opc_if_icmpne((short) 0xa0, "比较栈顶两int型数值大小，当结果不等于0时跳转"),
	opc_if_icmplt((short) 0xa1, "比较栈顶两int型数值大小，当结果小于0时跳转"),
	opc_if_icmpge((short) 0xa2, "比较栈顶两int型数值大小，当结果大于等于0时跳转"),
	opc_if_icmpgt((short) 0xa3, "比较栈顶两int型数值大小，当结果大于0时跳转"),
	opc_if_icmple((short) 0xa4, "比较栈顶两int型数值大小，当结果小于等于0时跳转"),
	opc_if_acmpeq((short) 0xa5, "比较栈顶两引用型数值，当结果相等时跳转"),
	opc_if_acmpne((short) 0xa6, "比较栈顶两引用型数值，当结果不相等时跳转"),
	opc_goto((short) 0xa7, "无条件跳转"),
	opc_jsr((short) 0xa8, "跳转至指定16位offset位置，并将jsr下一条指令地址压入栈顶"),
	opc_ret((short) 0xa9, "返回至本地变量指定的index的指令位置（一般与jsr,jsr_w联合使用）"),
	opc_tableswitch((short) 0xaa, "用于switch条件跳转，case值连续（可变长度指令）"),
	opc_lookupswitch((short) 0xab, "用于switch条件跳转，case值不连续（可变长度指令）"),
	opc_ireturn((short) 0xac, "从当前方法返回int"),
	opc_lreturn((short) 0xad, "从当前方法返回long"),
	opc_freturn((short) 0xae, "从当前方法返回float"),
	opc_dreturn((short) 0xaf, "从当前方法返回double"),
	opc_areturn((short) 0xb0, "从当前方法返回对象引用"),
	opc_return((short) 0xb1, "从当前方法返回void"),
	opc_getstatic((short) 0xb2, "获取指定类的静态域，并将其值压入栈顶"),
	opc_putstatic((short) 0xb3, "为指定的类的静态域赋值"),
	opc_getfield((short) 0xb4, "获取指定类的实例域，并将其值压入栈顶"),
	opc_putfield((short) 0xb5, "为指定的类的实例域赋值"),
	opc_invokevirtual((short) 0xb6, "调用实例方法"),
	opc_invokespecial((short) 0xb7, "调用超类构造方法，实例初始化方法，私有方法"),
	opc_invokestatic((short) 0xb8, "调用静态方法"),
	opc_invokeinterface((short) 0xb9, "调用接口方法"),
	opc_none0xba((short) 0xba, "none0xba"),
	opc_new((short) 0xbb, "创建一个对象，并将其引用值压入栈顶"),
	opc_newarray((short) 0xbc, "创建一个指定原始类型（如int,float,char…）的数组，并将其引用值压入栈顶"),
	opc_anewarray((short) 0xbd, "创建一个引用型（如类，接口，数组）的数组，并将其引用值压入栈顶"),
	opc_arraylength((short) 0xbe, "获得数组的长度值并压入栈顶"),
	opc_athrow((short) 0xbf, "将栈顶的异常抛出"),
	opc_checkcast((short) 0xc0, "检验类型转换，检验未通过将抛出ClassCastException"),
	opc_instanceof((short) 0xc1, "检验对象是否是指定的类的实例，如果是将1压入栈顶，否则将0压入栈顶"),
	opc_monitorenter((short) 0xc2, "获得对象的锁，用于同步方法或同步块"),
	opc_monitorexit((short) 0xc3, "释放对象的锁，用于同步方法或同步块"),
	opc_wide((short) 0xc4, "<待补充>"),
	opc_multianewarray((short) 0xc5, "创建指定类型和指定维度的多维数组（执行该指令时，操作栈中必须包含各维度的长度值），并将其引用值压入栈顶"),
	opc_ifnull((short) 0xc6, "为null时跳转"),
	opc_ifnonnull((short) 0xc7, "不为null时跳转"),
	opc_goto_w((short) 0xc8, "无条件跳转（宽索引）"),
	opc_jsr_w((short) 0xc9, "跳转至指定32位offset位置，并将jsr_w下一条指令地址压入栈顶"),
	opc_breakpoint((short) 0xca, "<待补充>"),
	opc_none0xfe((short) 0xfe, "none0xfe"),
	opc_none0xff((short) 0xff, "none0xff");

	short code;
	String desc;

	ByteCode(short code, String desc) {
		this.code = code;
		this.desc = desc;
	}
	
	public short getCode(){
		return code;
	}
	
	public String getDesc(){
		return desc;
	}
	
	public static ByteCode getByteCode(short code){
		for (ByteCode byteCode : values()) {
			if(byteCode.code == code){
				return byteCode;
			}
		}
		return null;
	}
	
	public static String getDesc(String name){
		for (ByteCode byteCode : values()) {
			String opcName = "opc_" + name;
			if(opcName.equals(byteCode.name())){
				return byteCode.desc;
			}
		}
		return null;
	}

}
